## how to show the errors popping out of form.

Just to make sure we get soem errors where we are creating the post.

a) make the following modification in the /blog/views.py

def ContactView(request):

	# GET
	contact_form = ContactForm  # class not a instance.
	context = {'form':contact_form}
	
	# POST
	if request.method == 'POST':
		contact_form = ContactForm(request.POST)
	# POST and VALID data.
		if contact_form.is_valid():
			contact_name = contact_form.cleaned_data['contact_name']
			contact_email = contact_form.cleaned_data['contact_email']
			content = contact_form.cleaned_data['content']
			subject = "A new contact or lead - {}".format(contact_name)
			email = EmailMessage(subject,contact_name + '\n' + contact_email + '\n' + content , to=['tuxfux.hlp@gmail.com'])
			email.send()
			return HttpResponseRedirect('/blog/thankyou/')
	# POST and NOT VALID DATA.
		else:
			context = {'form':contact_form}
	# GET and POST
	return render(request,'blog/ContactForm.html',context)


###
# Modular forms
###

reference:
https://docs.djangoproject.com/en/1.11/ref/models/options/

a) create the forms in the src/blog/forms.py


from .models import Post
# https://docs.djangoproject.com/en/1.11/ref/models/options/
class BlogForm(forms.ModelForm):
	class Meta:
		model = Post
		#fields = ['author','title','text','created_date','published_date']
		fields = '__all__'

b) create a url for the post - src/blog/urls.py

from django.conf.urls import include, url
from .views import ContactView,Thanks,BlogView

urlpatterns = [
    # Examples:
    # url(r'^$', 'mysite.views.home', name='home'),
    # url(r'^blog/', include('blog.urls')),

    url(r'^$','blog.views.myblog',name='myblog'),
    url(r'^ContactForm/',ContactView,name='contact'),
    url(r'^PostForm/',BlogView,name='blog'),
    url(r'^thankyou/',Thanks,name='thanks')
]

c) create a view called BlogView - /src/blog/views.py

from django.shortcuts import render
from django.http import HttpResponse,HttpResponseRedirect
from .models import Post
from .forms import ContactForm,BlogForm

def BlogView(request):
	# POST
	if request.method == 'POST':
		form = BlogForm(request.POST)
		if form.is_valid():
			author = form.cleaned_data['author']
			title = form.cleaned_data['title']
			text = form.cleaned_data['text']
			created_date = form.cleaned_data['created_date']
			published_date = form.cleaned_data['published_date']
			Post.objects.create(author=author,title=title,text=text,created_date=created_date,published_date=published_date)
			return HttpResponseRedirect('/blog/thankyou')
		else:
			context = {'form':form}
			return render(request,'blog/BlogForm.html',context)
	#GET
	else:
		form = BlogForm
		context = {'form':form}
		return render(request,'blog/BlogForm.html',context)

d) Lets create our template under - src/blog/templates/blog/BlogForm.html

<html>
<head>
<title> Post Form for our sites</title>
</head>
<body>
	<form action="" method="post">{% csrf_token %}
	{{ form.as_p }}
	<button type="submit">Submit</button>
    </form>
</body>
</html>